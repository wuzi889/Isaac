1、逐条规则匹配，执行第一条符合条件的结果。 ? 包含用户帐号、系统帐号、目标设备和命令模式列表的匹配。
? 如果全部不满足，按照缺省策略进行。 对于多条权限控制策略，shterm 采用从上至下的顺序进行匹配，当匹配到一
条策略后将立即执行该策略，对于该策略之后的策略将不再进行检查。如果系统
在已有的规则里匹配不到，则按缺省策略执行。 2、命令的匹配规则
? 如果不包含空格，表示只对命令部分进行匹配： ? 如果以"^"开头，或者包含"/"字符，表示严格匹配。意思是命令部分 必须完全匹配正则表达式。比如"^passwd$"只匹配"passwd"本身，前 面加上任何字符都认为不匹配。比如"/usr/bin/passwd$"只匹配 "/usr/bin/passwd"，任何其他路径或不写路径都不接受。 否则将把命 令的最后一个"/"字符后的部分拿来做匹配。比如"passwd$"匹配 "passwd"、"/usr/bin/passwd"、"asdf/passwd"等。 ? 如果包含空格，第一个空格以前的部分是对命令的可执行文件部分
进行匹配，与上面的规则相同；后面的部分（包括其他空格）对命
令的参数部分进行匹配：就是把命令行去掉命令本身之外的所有参
数部分作为一个整体，与进行匹配。


所有的匹配都基于正则表达式。下表为正则表达式通配符的介绍： 符 号 含 义 . 匹配任意字符：代表 1 位 ^ 匹配字符串的开头 $ 匹配字符串的结尾 * 表示之前的模式可重复 0-N 次 + 表示之前的模式可重复 1-N 次 ？ 表示之前的模式可重复 0-1 次 {m} 表示之前的模式可重复 m 次 {m,n} 表示之前的模式可重复 m-n 次 {,n} 表示之前的模式可重复不超过 n 次 [...] 表示可匹配方括号内出现的任意字符，可用"-"表示范 围，如 a-z、0-9 等 [^...] 表示可匹配方括号内未出现的任意字符，可用"-"表示 范围，如 a-z、0-9 等 | 表示可匹配 A 或 B，这里 A 和 B 都可以是正则表达式 \ 转义符，表示取消后面字符的特殊含义，仅表示该字 符本身 \d 表示可匹配任意数字字符；"\D"表示可匹配任意非数 字字符 \s 表示可匹配任意空白字符；"\S"表示可匹配任意非空 白字
\s 表示可匹配任意空白字符；"\S"表示可匹配任意非空 白字符 \w 表示可匹配任意字母、数字或下划线；"\W"表示可
\r 表示回车 \n 表示换行 \t 表示制表
